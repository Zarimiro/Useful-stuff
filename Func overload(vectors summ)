#include<iostream>
#include<conio.h>
using namespace std;
class Vector
{
	double *p;
	unsigned n;
public:
	Vector(double *p, int n)
	{
		this->n = n;
		this->p = new double[n];
		for (unsigned i = 0; i < n; ++i) this->p[i] = p[i];

	}
	void print()
	{
		cout << endl;
		for (unsigned i = 0; i < n; ++i)
			cout << p[i] << " ";
	}
	Vector() { p = 0; n = 0; }
	~Vector()
	{
		if (n>0) delete[] p;
	}

	friend Vector & operator +(Vector&v1, double*x);

};
Vector&  operator +(Vector&v1, double*x)
{
	double *p = new double[v1.n];
	for (unsigned i = 0; i<v1.n; ++i) p[i] = x[i] + v1.p[i];
	Vector *pV = new Vector(p, v1.n);
	delete[] p;
	return *pV;
}
int main() {
	double p1[] = { 4,7,3 };
	double p2[] = { 3,8,11 };
	Vector V1(p1, 3);
	Vector V2;
	V2 = V1 + p2;
	V1.print();
	cout << endl<<"+"<<endl;
	for (unsigned i = 0; i < 3; ++i) cout << p2[i]<<" ";
	cout << endl << "=";
	V2.print();
	_getch();
	return 0;
}
